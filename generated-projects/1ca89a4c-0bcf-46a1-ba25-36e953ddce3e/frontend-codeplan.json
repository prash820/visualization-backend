{
  "fileStructure": {
    "src": {
      "components": {
        "App": {
          "App.tsx": "Main application component",
          "App.test.tsx": "Tests for App component",
          "App.css": "Styles for App component"
        },
        "Header": {
          "Header.tsx": "Header component",
          "Header.test.tsx": "Tests for Header component",
          "Header.css": "Styles for Header component"
        },
        "Calculator": {
          "Calculator.tsx": "Calculator component",
          "Calculator.test.tsx": "Tests for Calculator component",
          "Calculator.css": "Styles for Calculator component",
          "Display": {
            "Display.tsx": "Display component",
            "Display.test.tsx": "Tests for Display component",
            "Display.css": "Styles for Display component"
          },
          "Keypad": {
            "Keypad.tsx": "Keypad component",
            "Keypad.test.tsx": "Tests for Keypad component",
            "Keypad.css": "Styles for Keypad component"
          },
          "ScientificCalc": {
            "ScientificCalc.tsx": "Scientific Calculator component",
            "ScientificCalc.test.tsx": "Tests for Scientific Calculator component",
            "ScientificCalc.css": "Styles for Scientific Calculator component"
          },
          "History": {
            "History.tsx": "History component",
            "History.test.tsx": "Tests for History component",
            "History.css": "Styles for History component"
          },
          "ErrorBoundary": {
            "ErrorBoundary.tsx": "Error Boundary component",
            "ErrorBoundary.test.tsx": "Tests for Error Boundary component"
          },
          "Loading": {
            "Loading.tsx": "Loading State component",
            "Loading.test.tsx": "Tests for Loading State component"
          }
        }
      },
      "hooks": {
        "useScientificNotation.ts": "Custom hook for scientific notation"
      },
      "context": {
        "CalculatorContext.tsx": "Context for calculator state management"
      },
      "services": {
        "ApiClient.ts": "API client service",
        "AuthService.ts": "Authentication service"
      },
      "store": {
        "index.ts": "Redux store setup",
        "calculatorSlice.ts": "Redux slice for calculator"
      },
      "routes": {
        "index.tsx": "Route configuration"
      },
      "types": {
        "CalculatorTypes.ts": "TypeScript interfaces and types for calculator"
      },
      "styles": {
        "global.css": "Global styles"
      },
      "index.tsx": "Application entry point",
      "index.css": "Entry point styles",
      "setupTests.ts": "Test setup file"
    }
  },
  "dependencies": {
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-router-dom": "^6.0.0",
    "redux": "^4.1.0",
    "react-redux": "^8.0.0",
    "typescript": "^4.5.0",
    "axios": "^0.24.0",
    "jest": "^27.0.0",
    "react-testing-library": "^12.0.0",
    "redux-thunk": "^2.4.0"
  }
}