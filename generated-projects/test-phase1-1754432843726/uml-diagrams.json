{
  "architecture": "graph TD;\n    subgraph Frontend\n        UI[React UI Components]\n        State[State Management]\n        Router[React Router]\n    end\n    subgraph Backend\n        APIG[API Gateway]\n        Lambda[AWS Lambda Functions]\n        Auth[Cognito Auth]\n    end\n    subgraph Database\n        DynamoDB[(DynamoDB Tables)]\n        S3[(S3 Storage)]\n    end\n    subgraph ExternalServices\n        Stripe[Stripe Payment Gateway]\n        PayPal[PayPal Payment Gateway]\n        SES[AWS SES for Email]\n        UPS[UPS Shipping]\n        FedEx[FedEx Shipping]\n    end\n    UI -->|HTTP Requests| APIG\n    APIG -->|Trigger| Lambda\n    Lambda -->|Read/Write| DynamoDB\n    Lambda -->|File Operations| S3\n    UI -->|Authentication| Auth\n    Lambda -->|Payment| Stripe\n    Lambda -->|Payment| PayPal\n    Lambda -->|Email| SES\n    Lambda -->|Shipping| UPS\n    Lambda -->|Shipping| FedEx",
  "sequence": "sequenceDiagram;\n    participant User as User\n    participant Frontend as React Frontend\n    participant API as API Gateway\n    participant Lambda as AWS Lambda\n    participant DB as DynamoDB\n    participant Auth as Cognito\n    participant Payment as Payment Gateway\n    participant Email as SES\n    User->>Frontend: Browse Products\n    Frontend->>API: Get Product List\n    API->>Lambda: Fetch Products\n    Lambda->>DB: Query Products\n    DB-->>Lambda: Product Data\n    Lambda-->>API: Product List\n    API-->>Frontend: Product Data\n    User->>Frontend: Add to Cart\n    Frontend->>API: Add Item to Cart\n    API->>Lambda: Update Cart\n    Lambda->>DB: Update Cart Data\n    DB-->>Lambda: Cart Updated\n    Lambda-->>API: Cart Update Confirmation\n    API-->>Frontend: Cart Updated\n    User->>Frontend: Checkout\n    Frontend->>Auth: Authenticate\n    Auth-->>Frontend: JWT Token\n    Frontend->>API: Process Payment\n    API->>Payment: Initiate Payment\n    Payment-->>API: Payment Confirmation\n    API->>Lambda: Create Order\n    Lambda->>DB: Store Order\n    DB-->>Lambda: Order Stored\n    Lambda-->>API: Order Confirmation\n    API-->>Frontend: Order Details\n    Frontend->>Email: Send Confirmation Email\n    Email-->>Frontend: Email Sent",
  "component": "graph TD;\n    subgraph Frontend\n        App[App Component]\n        Header[Header Component]\n        Footer[Footer Component]\n        HomePage[Home Page]\n        ProductPage[Product Page]\n        CartPage[Cart Page]\n        CheckoutPage[Checkout Page]\n        OrderConfirmationPage[Order Confirmation Page]\n        LoginPage[Login Page]\n        RegisterPage[Register Page]\n        UserProfilePage[User Profile Page]\n        Router[React Router]\n        State[State Management]\n    end\n    App --> Header\n    App --> Footer\n    App --> Router\n    Router --> HomePage\n    Router --> ProductPage\n    Router --> CartPage\n    Router --> CheckoutPage\n    Router --> OrderConfirmationPage\n    Router --> LoginPage\n    Router --> RegisterPage\n    Router --> UserProfilePage\n    HomePage --> State\n    ProductPage --> State\n    CartPage --> State\n    CheckoutPage --> State\n    OrderConfirmationPage --> State\n    LoginPage --> State\n    RegisterPage --> State\n    UserProfilePage --> State",
  "database": "erDiagram;\n    USER {\n        string id PK\n        string email\n        string name\n        string passwordHash\n        string role\n        date createdAt\n        date updatedAt\n    }\n    PRODUCT {\n        string id PK\n        string name\n        string description\n        float price\n        int stock\n        string category\n        date createdAt\n        date updatedAt\n    }\n    ORDER {\n        string id PK\n        string userId FK\n        date orderDate\n        float totalAmount\n        string status\n        date createdAt\n        date updatedAt\n    }\n    ORDER_ITEM {\n        string id PK\n        string orderId FK\n        string productId FK\n        int quantity\n        float price\n        date createdAt\n        date updatedAt\n    }\n    CART {\n        string id PK\n        string userId FK\n        date createdAt\n        date updatedAt\n    }\n    CART_ITEM {\n        string id PK\n        string cartId FK\n        string productId FK\n        int quantity\n        date createdAt\n        date updatedAt\n    }\n    USER ||--o{ ORDER : \"places\"\n    ORDER ||--|{ ORDER_ITEM : \"contains\"\n    USER ||--o{ CART : \"has\"\n    CART ||--|{ CART_ITEM : \"contains\"\n    PRODUCT ||--o{ ORDER_ITEM : \"is part of\"\n    PRODUCT ||--o{ CART_ITEM : \"is part of\""
}